class Solution {
public:
    void solve(vector<int>&arr,int target,vector<vector<int>>&res,vector<int>&v,int i)
    {
        if(target==0)
        {
            res.push_back(v);
            return;
        }
         while (i < arr.size() && target-arr[i] >= 0) {
         v.push_back(arr[i]); 
         solve(arr,target-arr[i],res,v,i);
         i++;
         v.pop_back();
         }
    }
    vector<vector<int>> combinationSum(vector<int>& arr, int target) {
        sort(arr.begin(), arr.end());
        arr.erase(unique(arr.begin(), arr.end()), arr.end());
        vector<vector<int>>res;
        vector<int>v;
        solve(arr,target,res,v,0);
        return res;
    }
    
};
